name: Create Milestones
run-name: Create new milestones for the next two weeks
on:
  push:
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Get the date of next Wednesday and check if milestone exists
        id: next-wednesday
        run: |
          date=$(TZ=Asia/Seoul date -d 'next thursday' +%y.%m.%d)
          iso_date=$(TZ=Asia/Seoul date -d 'next thursday' +%Y-%m-%dT%H:%M:%SZ)
          milestones=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/$GITHUB_REPOSITORY/milestones | jq -r '.[].title')
          if [[ $milestones != *"$date"* ]]; then
            echo "::set-output name=exists::false"
            echo "Creating a new milestone for $date"
            uses: oinume/create-scheduled-milestone-action@v1.0.0
            with:
              title: $date
              state: "open"
              due_on: $iso_date
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          else
            echo "::set-output name=exists::true"
          fi
        shell: bash

      - name: Get the date of the Wednesday after next and check if milestone exists
        id: next-next-wednesday
        run: |
          date=$(TZ=Asia/Seoul date -d '2 weeks next thursday' +%y.%m.%d)
          iso_date=$(TZ=Asia/Seoul date -d '2 weeks next thursday' +%Y-%m-%dT%H:%M:%SZ)
          milestones=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/$GITHUB_REPOSITORY/milestones | jq -r '.[].title')
          if [[ $milestones != *"$date"* ]]; then
            echo "::set-output name=exists::false"
            echo "Creating a new milestone for $date"
            uses: oinume/create-scheduled-milestone-action@v1.0.0
            with:
              title: $date
              state: "open"
              due_on: $iso_date
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          else
            echo "::set-output name=exists::true"
          fi
        shell: bash
